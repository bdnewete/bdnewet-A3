Health and Fitness Calculators Server by Brhan Newete

This Node.js server provides API endpoints to calculate various health and fitness metrics.
 It uses Express.js, a fast and minimalist web framework for Node.js, for handling HTTP requests and responses.

How to Run

1. Download the entire project folder to your computer.

2. Make sure you have Node.js installed on your computer.
 
3. Open a terminal or command prompt and navigate to the project folder.

4. Install the required dependencies by running the following command:
npm install
npm install express

5. Start the server by running the following command: node app.js

6. The server will start and be accessible at http://localhost:3000.

## API Endpoints

1. **Calculate BMI:**
- URL: POST /bmi
- Request Body: `{ "weight": weight_in_kg, "height": height_in_cm }`
- Response: `{ "bmi": calculated_bmi }`

2. **Calculate Body Fat:**
- URL: POST /bodyfat
- Request Body: `{ "bmi": calculated_bmi, "age": age, "gender": "male" or "female" }`
- Response: `{ "bodyFat": calculated_body_fat_percentage }`

3. **Calculate Ideal Weight:**
- URL: POST /idealweight
- Request Body: `{ "height": height_in_cm, "gender": "male" or "female" }`
- Response: `{ "idealWeight": calculated_ideal_weight_in_kg }`

4. **Calculate Calories Burned:**
- URL: POST /caloriesburned
- Request Body: `{ "weight": weight_in_kg, "time": time_in_minutes, "speed": speed_in_m_s, "height": height_in_cm }`
- Response: `{ "caloriesBurned": estimated_calories_burned }`

## Usage

To use the API endpoints, you can make HTTP POST requests to the corresponding URLs with the required input data in the request body. 
The server, powered by Express.js, will handle these requests and respond with the calculated results.

For example, you can use tools like Postman or send AJAX requests 
from your web application to interact with the server and calculate health and fitness metrics.


